syntax = "proto3";

package build.stack.bezel.v1beta1;

import "google/protobuf/timestamp.proto";

// WorkspaceService performs operations on 
service WorkspaceService {
    rpc List(ListWorkspacesRequest) returns (ListWorkspacesResponse) {}
  }

// ListWorkspacesRequest is consumed by the WorkspaceService.List rpc.
message ListWorkspacesRequest {}

// ListWorkspacesResponse is produced by the WorkspaceService.List rpc.
message ListWorkspacesResponse { repeated Workspace workspace = 1; }

// Workspace represents a local bazel repository
message Workspace {
    reserved 14, 15, 21;

    // Path to the output_path
    string output_base = 1;
  
    // Id of the workspace (example: 01fa2f41eb57135eccbb39c05adce50f)
    string id = 2;
  
    // The process ID
    int32 pid = 3;
  
    // The server command line
    repeated string command_line = 4;
  
    // The command port
    string command_port = 5;
  
    // The request cookie
    string request_cookie = 6;
  
    // The response cookie
    string response_cookie = 7;
  
    // The server start time
    google.protobuf.Timestamp start_time = 8;
  
    // The working directory
    string cwd = 9;
  
    // The name of the workspace, parsed from the WORKSPACE file
    string name = 10;
  
    // The base_name of cwd
    string base_name = 11;
  
    // The default version of bazel to use
    string bazel_version = 12;
  
    // Path to the bazel binary that should be used for this workspace.  It is
    // either based on the version, or an override value.
    string bazel_binary = 13;
  
    // If this is a tombstone (cwd does not exist)
    bool tombstone = 16;
  
    // The default configuration that was selected by the user
    string default_configuration = 17;
  
    // The users home dir
    string home_dir = 18;
  
    // the startup options
    repeated bytes startup_options = 19;
    
    // The local exec root
    string local_exec_root = 21;
  
    // The cwd, always forward slashed and drive letter uppercased.
    string normalized_cwd = 22;
  }