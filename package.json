{
    "name": "bazel-stack-vscode",
    "displayName": "bazel-stack-vscode",
    "description": "Bazel Support for Visual Studio Code",
    "version": "0.8.0",
    "publisher": "StackBuild",
    "license": "Apache-2.0",
    "icon": "stackb-full.png",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/stackb/bazel-stack-vscode.git"
    },
    "keywords": [
        "bazel"
    ],
    "author": "stack.build authors",
    "bugs": {
        "url": "https://github.com/stackb/bazel-stack-vscode/issues"
    },
    "homepage": "https://github.com/stackb/bazel-stack-vscode#readme",
    "categories": [
        "Programming Languages",
        "Snippets"
    ],
    "activationEvents": [
        "onUri",
        "onCommand:bsv.openExtensionSetting",
        "onCommand:workbench.view.extension.bazel-explorer",
        "onLanguage:bazel",
        "onLanguage:bazelrc",
        "onLanguage:starlark",
        "onView:bazel-explorer",
        "onView:bsv.workspace"
    ],
    "engines": {
        "vscode": "^1.45.0"
    },
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Bzl",
            "properties": {
                "bsv.account.serverAddress": {
                    "type": "string",
                    "default": "grpcs://accounts.bzl.io:443",
                    "description": "Address of the stack.build account server"
                },
                "bsv.account.authToken": {
                    "type": "string",
                    "description": "Authentication token for accounts.bzl.io"
                },
                "bsv.bazel.Executable": {
                    "type": "string",
                    "default": "",
                    "description": "Path to the bazel executable.  If not defined, defaults to 'bazel' on the system PATH."
                },
                "bsv.bazel.buildFlags": {
                    "type": "array",
                    "description": "Flags to use for the build command.",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "bsv.bazel.testFlags": {
                    "type": "array",
                    "description": "Flags to use for the test command.",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "bsv.bazel.runFlags": {
                    "type": "array",
                    "description": "Flags to use for the run command.",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "bsv.bzl.starlarkDebugger.serverFlags": {
                    "type": "array",
                    "description": "Flags for the bazel debug server.",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "--experimental_skylark_debug",
                        "--experimental_skylark_debug_server_port=7300",
                        "--experimental_skylark_debug_verbose_logging=true"
                    ]
                },
                "bsv.bzl.starlarkDebugger.cliCommand": {
                    "type": "array",
                    "description": "Command to launch the starlark debugger CLI.",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "debug",
                        "--debug_working_directory=${workspaceFolder}"
                    ]
                },
                "bsv.bzl.starlark.codelensCodesearchEnabled": {
                    "type": "boolean",
                    "description": "Bazel target codelenses should include a 'search' item that links to the Codesearch UI",
                    "default": true
                },
                "bsv.bzl.starlark.codelensBuildWithBepEnabled": {
                    "type": "boolean",
                    "description": "Build and test commands should report using the build event protocol (BEP) rather than being run in a vscode terminal",
                    "default": true
                },
                "bsv.bzl.starlark.codelensUiEnabled": {
                    "type": "boolean",
                    "description": "Bazel target codelenses should include a 'UI' item that links to the corresponding rule",
                    "default": true
                },
                "bsv.bzl.starlark.codelensDebugStarlarkEnabled": {
                    "type": "boolean",
                    "description": "Bazel target codelenses should include a 'debug' item that starts a starlark debug session",
                    "default": true
                },
                "bsv.bzl.starlark.codelensEnabled": {
                    "type": "boolean",
                    "description": "Add codelens action links above bazel targets",
                    "default": true
                },
                "bsv.bzl.downloadBaseUrl": {
                    "type": "string",
                    "default": "https://get.bzl.io",
                    "description": "Base URL for bzl downloads"
                },
                "bsv.bzl.server.invokeWithBuildEventStreaming": {
                    "type": "boolean",
                    "description": "If true, build and test invocations will stream build events into the IDE.  If false, invoke the command in a terminal",
                    "default": true
                },
                "bsv.bzl.server.address": {
                    "type": "string",
                    "default": "grpc://localhost:8080",
                    "description": "Bind address for the bzl server."
                },
                "bsv.bzl.server.release": {
                    "type": "string",
                    "default": "v0.9.16",
                    "description": "Bzl release version"
                },
                "bsv.bzl.server.command": {
                    "type": "array",
                    "description": "Arguments to start the bzl server.",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "serve",
                        "--address=${address}"
                    ]
                },
                "bsv.bzl.server.executable": {
                    "type": "string",
                    "description": "Path to a bzl executable\n\n> if set, this prevents downloading a bzl binary from the baseURL location"
                },
                "bsv.bzl.lsp.command": {
                    "type": "array",
                    "description": "The command (and optional arguments) to start the lsp server.",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "lsp",
                        "serve",
                        "--log_level=debug"
                    ]
                },
                "bsv.bzl.remoteCache.executable": {
                    "type": "string",
                    "description": "Path to the remote cache executable\n\n>.  Defaults to the value of ${bsv.bzl.server.executable}"
                },
                "bsv.bzl.remoteCache.command": {
                    "type": "array",
                    "description": "Command to start the remote cache",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "cache"
                    ]
                },
                "bsv.bzl.remoteCache.address": {
                    "type": "string",
                    "default": "grpc://localhost:2020",
                    "description": "Bind address for the remote cache."
                },
                "bsv.bzl.remoteCache.dir": {
                    "type": "string",
                    "description": "Local filesystem directory for the disk cache.  Defaults to a subdirectory of the bzl --basedir"
                },
                "bsv.bzl.remoteCache.maxSizeGb": {
                    "type": "number",
                    "default": 10,
                    "description": "Max size of the remote cache"
                },
                "bsv.bes.address": {
                    "type": "string",
                    "description": "Bind address for the bes_backend.  Defaults to bsv.bzl.server.address"
                },
                "bsv.bzl.codesearch.maxMatches": {
                    "type": "number",
                    "default": 50,
                    "description": "Number of matches to show by default"
                },
                "bsv.bzl.codesearch.defaultLinesContext": {
                    "type": "number",
                    "default": 3,
                    "description": "Number of context lines to show for search results"
                },
                "bsv.bzl.codesearch.defaultUseRegexp": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use regexp search by default"
                },
                "bsv.bzl.codesearch.foldCase": {
                    "type": "boolean",
                    "default": true,
                    "description": "Fold case by default"
                },
                "bsv.buildifier.githubRelease": {
                    "type": "string",
                    "default": "4.0.1",
                    "description": "The github release tag of the Buildifier release to download"
                },
                "bsv.buildifier.githubOwner": {
                    "type": "string",
                    "default": "bazelbuild",
                    "description": "The github owner for the buildifier repository"
                },
                "bsv.buildifier.githubRepo": {
                    "type": "string",
                    "default": "buildtools",
                    "description": "The github repo name for the buildifier repository"
                },
                "bsv.buildifier.executable": {
                    "type": "string",
                    "description": "Path to a pre-installed buildifier executable\n\n> if set, this prevents downloading a buildifier binary from github"
                },
                "bsv.buildifier.fixOnFormat": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to automatically apply lint fixes from buildifier when formatting a Bazel file."
                },
                "bsv.bzldoc.base-url": {
                    "type": "string",
                    "default": "https://docs.bazel.build/versions/master",
                    "description": "The base-url of the documentation site"
                }
            }
        },
        "taskDefinitions": [],
        "commands": [
            {
                "category": "Bzl",
                "command": "bsv.bzl.copyLabel",
                "title": "Bazel: Copy label to clipboard",
                "icon": "$(clippy)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.redo",
                "title": "Bazel: Redo Last Bazel Invocation",
                "icon": "$(redo)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.component.refresh",
                "title": "Bazel: Refresh Component",
                "icon": "$(refresh)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.bazelKill",
                "title": "Bazel: Send Kill Signal to Bazel Server",
                "icon": "$(panel-close)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.openTerminal",
                "title": "Bazel: Open bazel directory in terminal",
                "icon": "$(terminal)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.openFile",
                "title": "Bazel: Open file",
                "icon": "$(file)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.invocations.refresh",
                "title": "Refresh Bazel Invocations List",
                "icon": "$(refresh)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.invocation.invoke",
                "title": "Run Invocation",
                "icon": "$(play)"
            },
            {
                "category": "Bzl",
                "command": "bsv.workspace.refresh",
                "title": "Refresh Bazel Workspace",
                "icon": "$(refresh)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.starlarkDebugger.launch",
                "title": "Launch Starlark Debugger CLI",
                "icon": "$(play)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.server.launch",
                "title": "Launch Bzl Server",
                "icon": "$(play)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.remoteCache.launch",
                "title": "Launch Remote Cache",
                "icon": "$(play)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.ui.workspace",
                "title": "View Bazel Workspace in UI",
                "icon": "media/stackb-blue.svg"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.ui.server",
                "title": "View Bazel UI",
                "icon": "media/stackb-blue.svg"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.ui.invocation",
                "title": "View Bazel Invocation in UI",
                "icon": "media/stackb-blue.svg"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.ui.label",
                "title": "View Bazel Label in UI",
                "icon": "media/stackb-blue.svg"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.invocations.refresh",
                "title": "Refresh Bazel Invocations",
                "icon": "$(refresh)"
            },
            {
                "category": "Bzl",
                "command": "bsv.bzl.signin",
                "title": "Sign Up for Bzl Service",
                "icon": "$(sign-in)"
            }
        ],
        "keybindings": [
            {
                "command": "bsv.bzl.redo",
                "key": "shift+cmd+space"
            },
            {
                "command": "bsv.bzl.copyLabel",
                "key": "ctrl+shift+cmd+b"
            },
            {
                "command": "workbench.view.extension.bazel-explorer",
                "key": "shift+cmd+t",
                "title": "Reveal Bazel Explorer"
            }
        ],
        "menus": {
            "commandPalette": [],
            "view/title": [
                {
                    "command": "bsv.workspace.refresh",
                    "when": "view == bsv.workspace"
                },
                {
                    "command": "bsv.bzl.invocations.refresh",
                    "when": "view == bsv.workspace && viewItem == recentInvocations"
                }
            ],
            "view/item/context": [
                {
                    "command": "bsv.bzl.component.refresh",
                    "when": "view == bsv.workspace && viewItem == component",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.ui.server",
                    "when": "view == bsv.workspace && viewItem == bzl",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.workspace.refresh",
                    "when": "view == bsv.workspace && viewItem == bazel",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.ui.workspace",
                    "when": "view == bsv.workspace && viewItem == default",
                    "group": "inline@1"
                },
                {
                    "command": "bsv.bzl.openTerminal",
                    "when": "view == bsv.workspace && viewItem == folder",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.openFile",
                    "when": "view == bsv.workspace && viewItem == file",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.bazelKill",
                    "when": "view == bsv.workspace && viewItem == server_pid",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.invocations.refresh",
                    "when": "view == bsv.workspace && viewItem == recent_invocations",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.invocation.invoke",
                    "when": "view == bsv.workspace && viewItem == invocation",
                    "group": "inline@0"
                },
                {
                    "command": "bsv.bzl.ui.invocation",
                    "when": "view == bsv.workspace && viewItem == invocation || viewItem == finished || viewItem == started",
                    "group": "inline@1"
                }
            ],
            "editor/context": [
                {
                    "command": "bsv.bzl.copyLabel",
                    "group": "starlark",
                    "when": "editorTextFocus && editorLangId == bazel"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "bazel-explorer",
                    "title": "Bazel",
                    "icon": "media/bazel-wireframe.svg"
                }
            ]
        },
        "views": {
            "bazel-explorer": [
                {
                    "id": "bsv.workspace",
                    "name": "Workspace",
                    "icon": "media/bazel-wireframe.svg",
                    "contextualTitle": "Current Bazel Workspace"
                }
            ]
        },
        "grammars": [
            {
                "language": "starlark",
                "scopeName": "source.starlark",
                "path": "./syntaxes/starlark.tmLanguage.json"
            },
            {
                "language": "bazel",
                "scopeName": "source.bazel",
                "path": "./syntaxes/bazel.tmLanguage.json"
            },
            {
                "language": "bazelrc",
                "scopeName": "source.bazelrc",
                "path": "./syntaxes/bazelrc.tmLanguage.json"
            }
        ],
        "languages": [
            {
                "id": "starlark",
                "aliases": [
                    "Starlark",
                    "starlark"
                ],
                "extensions": [
                    ".sky",
                    ".star"
                ],
                "configuration": "./syntaxes/starlark.configuration.json"
            },
            {
                "id": "bazel",
                "aliases": [
                    "Bazel"
                ],
                "extensions": [
                    ".BUILD",
                    ".bazel",
                    ".WORKSPACE",
                    ".bzl"
                ],
                "filenames": [
                    "BUILD",
                    "BUILD.bazel",
                    "WORKSPACE",
                    "WORKSPACE.bazel"
                ],
                "configuration": "./syntaxes/bazel.configuration.json"
            },
            {
                "id": "bazelrc",
                "aliases": [
                    "Bazelrc"
                ],
                "extensions": [
                    ".bazelrc"
                ],
                "filenames": [
                    "bazelrc"
                ],
                "configuration": "./syntaxes/bazelrc.configuration.json"
            }
        ],
        "snippets": [
            {
                "language": "bazel",
                "path": "./snippets/bazel.json"
            }
        ]
    },
    "main": "./out/extension.js",
    "scripts": {
        "clean": "rimraf out/",
        "fmt": "prettier --write \"src/**/*.ts\"&& npm run test -- --fix",
        "genproto": "node ./node_modules/@grpc/proto-loader/build/bin/proto-loader-gen-types.js --defaults --oneofs --verbose --includeComments -O ./src/proto --grpcLib @grpc/grpc-js proto/*.proto",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "lint": "eslint src --ext ts --ignore-pattern 'src/proto/**/*.ts' --fix",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js",
        "vscode-install": "npm run vscode-package && code --install-extension out/extension.vsix",
        "vscode-uninstall": "code --uninstall-extension out/extension.vsix",
        "vscode-package": "vsce package --out out/extension.vsix",
        "vscode:prepublish": "npm run clean && npm run compile"
    },
    "extensionDependencies": [
        "mindaro-dev.file-downloader"
    ],
    "dependencies": {
        "@grpc/grpc-js": "^1.3.4",
        "@grpc/proto-loader": "0.6.4",
        "@microsoft/vscode-file-downloader-api": "^1.0.1",
        "@octokit/rest": "18.0.3",
        "bazel-stack-vscode-api": "^1.2.2",
        "chokidar": "^3.5.1",
        "filesize": "6.1.0",
        "fs-extra": "9.0.1",
        "graceful-fs": "4.2.4",
        "luxon": "1.24.1",
        "mv": "^2.1.1",
        "portfinder": "1.0.28",
        "protobufjs": "6.10.1",
        "request": "2.88.2",
        "semver": "7.3.5",
        "sha256-file": "1.0.0",
        "shiki": "^0.2.6",
        "shiki-themes": "^0.2.6",
        "strip-ansi": "^6.0.0",
        "tmp": "0.2.1",
        "uuid": "8.3.0",
        "vscode-common": "1.50.0",
        "vscode-extension-telemetry": "^0.1.6",
        "vscode-languageclient": "7.0.0",
        "vscode-languageserver-protocol": "3.16.0"
    },
    "devDependencies": {
        "@octokit/types": "5.2.0",
        "@types/chai-string": "1.4.2",
        "@types/chai": "4.2.12",
        "@types/filesize": "5.0.0",
        "@types/fs-extra": "9.0.1",
        "@types/glob": "^7.1.1",
        "@types/graceful-fs": "4.1.2",
        "@types/luxon": "1.24.3",
        "@types/mocha": "^7.0.2",
        "@types/mv": "2.1.0",
        "@types/node": "^13.11.0",
        "@types/request": "2.48.5",
        "@types/semver": "5.5.0",
        "@types/sha256-file": "1.0.0",
        "@types/sinon": "9.0.4",
        "@types/strip-ansi": "5.2.1",
        "@types/tmp": "0.2.0",
        "@types/uuid": "8.3.0",
        "@types/vscode": "^1.45.0",
        "@typescript-eslint/eslint-plugin": "^2.30.0",
        "@typescript-eslint/parser": "^2.30.0",
        "chai-string": "1.5.0",
        "chai": "4.2.0",
        "eslint": "^6.8.0",
        "glob": "^7.1.6",
        "mocha": "^7.1.2",
        "prettier": "^2.2.1",
        "rimraf": "3.0.2",
        "sinon": "9.0.2",
        "ts-loader": "^8.0.4",
        "typescript": "^3.8.3",
        "vsce": "1.93.0",
        "vscode-test": "^1.3.0"
    },
    "prettier": {
        "printWidth": 100,
        "singleQuote": true,
        "tabWidth": 2,
        "arrowParens": "avoid"
    }
}
